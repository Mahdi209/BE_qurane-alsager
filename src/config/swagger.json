{
  "openapi": "3.0.0",
  "info": {
    "title": "QuranAlsager API",
    "version": "1.0.0",
    "description": "API documentation for QuranAlsager"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["General"],
        "summary": "Welcome message",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Welcome to my Express server ðŸš€"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "post": {
        "tags": ["Roles"],
        "summary": "Create a new role",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Role already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": ["Roles"],
        "summary": "Get all roles",
        "responses": {
          "200": {
            "description": "List of roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get role by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "put": {
        "tags": ["Roles"],
        "summary": "Update role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "delete": {
        "tags": ["Roles"],
        "summary": "Delete role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/api/admin/signup": {
      "post": {
        "tags": ["Admin"],
        "summary": "Create a new admin account",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "string",
                    "format": "binary",
                    "description": "Profile image file"
                  },
                  "username": {
                    "type": "string",
                    "description": "Admin username"
                  },
                  "fullName": {
                    "type": "string",
                    "description": "Admin full name"
                  },
                  "email": {
                    "type": "string",
                    "description": "Admin email"
                  },
                  "password": {
                    "type": "string",
                    "description": "Admin password"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["supervisor", "admin", "user"],
                    "default": "user",
                    "description": "Admin role"
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "object",
                        "properties": {
                          "create": {
                            "type": "boolean",
                            "default": false
                          },
                          "read": {
                            "type": "boolean",
                            "default": false
                          },
                          "update": {
                            "type": "boolean",
                            "default": false
                          },
                          "delete": {
                            "type": "boolean",
                            "default": false
                          }
                        }
                      },
                      "ageGroup": {
                        "type": "object",
                        "properties": {
                          "create": {
                            "type": "boolean",
                            "default": false
                          },
                          "read": {
                            "type": "boolean",
                            "default": false
                          },
                          "update": {
                            "type": "boolean",
                            "default": false
                          },
                          "delete": {
                            "type": "boolean",
                            "default": false
                          }
                        }
                      },
                      "question": {
                        "type": "object",
                        "properties": {
                          "create": {
                            "type": "boolean",
                            "default": false
                          },
                          "read": {
                            "type": "boolean",
                            "default": false
                          },
                          "update": {
                            "type": "boolean",
                            "default": false
                          },
                          "delete": {
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    }
                  }
                },
                "required": ["profile", "username", "email", "password", "role"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string"
                            },
                            "permissions": {
                              "type": "object"
                            },
                            "status": {
                              "type": "string"
                            },
                            "profile": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/admin/login": {
      "post": {
        "tags": ["Admin"],
        "summary": "Admin login",
        "description": "Authenticate admin and receive access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/admin/logout": {
      "post": {
        "tags": ["Admin"],
        "summary": "Admin logout",
        "description": "Logout admin and invalidate tokens",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully"
          },
          "401": {
            "description": "Invalid or missing token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/admin/refresh-token": {
      "post": {
        "tags": ["Admin"],
        "summary": "Refresh access token",
        "description": "Get new access token using refresh token",
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No refresh token provided"
          },
          "401": {
            "description": "Invalid refresh token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/categories": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Categories"],
        "summary": "Create a new category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Science"
                  },
                  "description": {
                    "type": "string",
                    "example": "Scientific questions category"
                  },
                  "app": {
                    "type": "boolean",
                    "default": false,
                    "example": false
                  },
                  "platform": {
                    "type": "boolean",
                    "default": false,
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Category already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Categories"],
        "summary": "Get all active categories",
        "description": "Retrieve all categories that haven't been soft deleted",
        "responses": {
          "200": {
            "description": "List of active categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/categories/deleted": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Categories"],
        "summary": "Get all deleted categories",
        "description": "Retrieve all categories that have been soft deleted",
        "responses": {
          "200": {
            "description": "List of deleted categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Categories"],
        "summary": "Get category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Category found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Categories"],
        "summary": "Update category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Science"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated scientific questions category"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Categories"],
        "summary": "Delete category (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/ageGroups": {
      "post": {
        "tags": ["Age Groups"],
        "summary": "Create a new age group",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "minAge", "maxAge"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the age group"
                  },
                  "minAge": {
                    "type": "number",
                    "description": "Minimum age for the group"
                  },
                  "maxAge": {
                    "type": "number",
                    "description": "Maximum age for the group"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Age group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeGroup"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": ["Age Groups"],
        "summary": "Get all age groups",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of age groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeGroup"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/ageGroups/{id}": {
      "get": {
        "tags": ["Age Groups"],
        "summary": "Get age group by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Age group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Age group found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeGroup"
                }
              }
            }
          },
          "404": {
            "description": "Age group not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Age Groups"],
        "summary": "Update age group",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Age group ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the age group"
                  },
                  "minAge": {
                    "type": "number",
                    "description": "Minimum age for the group"
                  },
                  "maxAge": {
                    "type": "number",
                    "description": "Maximum age for the group"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Age group updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeGroup"
                }
              }
            }
          },
          "404": {
            "description": "Age group not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Age Groups"],
        "summary": "Delete age group (soft delete)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Age group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Age group deleted successfully"
          },
          "404": {
            "description": "Age group not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/questions": {
      "post": {
        "tags": ["Questions"],
        "summary": "Create a new question",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "question_text",
                  "option1",
                  "option2",
                  "option3",
                  "correctOption",
                  "categoryId",
                  "ageGroupId"
                ],
                "properties": {
                  "question_text": {
                    "type": "string",
                    "description": "The question text"
                  },
                  "option1": {
                    "type": "string",
                    "description": "First option"
                  },
                  "option2": {
                    "type": "string",
                    "description": "Second option"
                  },
                  "option3": {
                    "type": "string",
                    "description": "Third option"
                  },
                  "correctOption": {
                    "type": "string",
                    "description": "The correct option"
                  },
                  "timeLimitSec": {
                    "type": "number",
                    "description": "Time limit in seconds",
                    "default": 30
                  },
                  "categoryId": {
                    "type": "string",
                    "description": "ID of the category"
                  },
                  "ageGroupId": {
                    "type": "string",
                    "description": "ID of the age group"
                  },
                  "status": {
                    "type": "boolean",
                    "description": "Question status",
                    "default": true
                  },
                  "app": {
                    "type": "boolean",
                    "description": "Flag for app availability",
                    "default": false
                  },
                  "platform": {
                    "type": "boolean",
                    "description": "Flag for platform availability",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Question created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": ["Questions"],
        "summary": "Get questions for mobile app (limited fields)",
        "responses": {
          "200": {
            "description": "List of questions for mobile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionMobile"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/questions/dashboard": {
      "get": {
        "tags": ["Questions"],
        "summary": "Get all questions for dashboard (admin only)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of questions with full details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/questions/dashboard/block": {
      "get": {
        "tags": ["Questions"],
        "summary": "Get all blocked questions for dashboard",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of blocked questions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/questions/status/{id}": {
      "patch": {
        "tags": ["Questions"],
        "summary": "Update question status",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Question ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "description": "New status for the question"
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Question status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "404": {
            "description": "Question not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/questions/{id}": {
      "get": {
        "tags": ["Questions"],
        "summary": "Get question by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Question ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Question found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "404": {
            "description": "Question not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Questions"],
        "summary": "Update question",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Question ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question_text": {
                    "type": "string",
                    "description": "The question text"
                  },
                  "option1": {
                    "type": "string",
                    "description": "First option"
                  },
                  "option2": {
                    "type": "string",
                    "description": "Second option"
                  },
                  "option3": {
                    "type": "string",
                    "description": "Third option"
                  },
                  "correctOption": {
                    "type": "string",
                    "description": "The correct option"
                  },
                  "timeLimitSec": {
                    "type": "number",
                    "description": "Time limit in seconds"
                  },
                  "categoryId": {
                    "type": "string",
                    "description": "ID of the category"
                  },
                  "ageGroupId": {
                    "type": "string",
                    "description": "ID of the age group"
                  },
                  "status": {
                    "type": "boolean",
                    "description": "Question status"
                  },
                  "app": {
                    "type": "boolean",
                    "description": "Flag for app availability"
                  },
                  "platform": {
                    "type": "boolean",
                    "description": "Flag for platform availability"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Question updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "404": {
            "description": "Question not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Questions"],
        "summary": "Delete question (soft delete)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Question ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Question deleted successfully"
          },
          "404": {
            "description": "Question not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/categories/mobile": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get categories for mobile app (limited fields)",
        "responses": {
          "200": {
            "description": "List of categories for mobile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryMobile"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/ageGroups/mobile": {
      "get": {
        "tags": ["Age Groups"],
        "summary": "Get age groups for mobile app (limited fields)",
        "responses": {
          "200": {
            "description": "List of age groups for mobile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeGroupMobile"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/time": {
      "get": {
        "tags": ["Time"],
        "summary": "Get time information",
        "description": "Retrieves time information for questions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "Question"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Time not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "type": "null"
                    },
                    "message": {
                      "type": "string",
                      "example": "time not found"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": false
                      },
                      "data": {
                        "type": "null"
                      },
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/logs": {
      "get": {
        "tags": ["Operation Logs"],
        "summary": "Get all operation logs",
        "description": "Retrieve all operation logs with admin details",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Operation logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OperationLog"
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/deleted": {
      "get": {
        "tags": ["Questions"],
        "summary": "Get all soft-deleted questions",
        "description": "Retrieve all questions that have been marked as deleted",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of deleted questions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Question"
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/{id}/permanent": {
      "delete": {
        "tags": ["Questions"],
        "summary": "Permanently delete a question",
        "description": "Remove a question from the database permanently",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Question ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Question permanently deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Question permanently deleted"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Question not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/suggestions": {
      "get": {
        "tags": ["Suggestions"],
        "summary": "Get all suggestions",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of suggestions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Suggestion"
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Suggestions"],
        "summary": "Create a new suggestion",
        "description": "Create a new suggestion for a question",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Suggestion created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Suggestion"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "/{id}": {
        "get": {
          "tags": ["Suggestions"],
          "summary": "Get suggestion by ID",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Suggestion ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Suggestion found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Suggestion"
                      },
                      "error": {
                        "type": "null"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Suggestion not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "put": {
          "tags": ["Suggestions"],
          "summary": "Update suggestion",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Suggestion ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestionInput"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Suggestion updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Suggestion"
                      },
                      "error": {
                        "type": "null"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Suggestion not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": ["Suggestions"],
          "summary": "Delete suggestion",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Suggestion ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Suggestion deleted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Suggestion deleted successfully"
                          }
                        }
                      },
                      "error": {
                        "type": "null"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Suggestion not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }
    },
    "/api/suggestions/{id}": {
      "get": {
        "tags": ["Suggestions"],
        "summary": "Get suggestion by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Suggestion ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Suggestion found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Suggestion"
                }
              }
            }
          },
          "404": {
            "description": "Suggestion not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Suggestions"],
        "summary": "Update suggestion",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Suggestion ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggestion updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Suggestion"
                }
              }
            }
          },
          "404": {
            "description": "Suggestion not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Suggestions"],
        "summary": "Delete suggestion",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Suggestion ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Suggestion deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Suggestion"
                }
              }
            }
          },
          "404": {
            "description": "Suggestion not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/admin/{id}": {
      "delete": {
        "tags": ["Admin"],
        "summary": "Delete admin (Supervisor only)",
        "description": "Delete an admin account. Only available to supervisors.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Admin ID to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Admin deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Admin deleted successfully"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete own account"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Only supervisors can delete admins"
          },
          "404": {
            "description": "Admin not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/admin/{id}/name": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Update admin username",
        "description": "Update an admin's username",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Admin ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username"],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "New username"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Username updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Admin not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/admin/{id}/role": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Update admin role and permissions (Supervisor only)",
        "description": "Update an admin's role and permissions. Only available to supervisors.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Admin ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["role", "permissions"],
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": ["user", "admin"],
                    "description": "New role for the admin"
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "object",
                        "properties": {
                          "create": { "type": "boolean" },
                          "read": { "type": "boolean" },
                          "update": { "type": "boolean" },
                          "delete": { "type": "boolean" }
                        }
                      },
                      "question": {
                        "type": "object",
                        "properties": {
                          "create": { "type": "boolean" },
                          "read": { "type": "boolean" },
                          "update": { "type": "boolean" },
                          "delete": { "type": "boolean" }
                        }
                      },
                      "ageGroup": {
                        "type": "object",
                        "properties": {
                          "create": { "type": "boolean" },
                          "read": { "type": "boolean" },
                          "update": { "type": "boolean" },
                          "delete": { "type": "boolean" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role and permissions updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string"
                            },
                            "permissions": {
                              "type": "object",
                              "properties": {
                                "category": {
                                  "type": "object",
                                  "properties": {
                                    "create": { "type": "boolean" },
                                    "read": { "type": "boolean" },
                                    "update": { "type": "boolean" },
                                    "delete": { "type": "boolean" }
                                  }
                                },
                                "question": {
                                  "type": "object",
                                  "properties": {
                                    "create": { "type": "boolean" },
                                    "read": { "type": "boolean" },
                                    "update": { "type": "boolean" },
                                    "delete": { "type": "boolean" }
                                  }
                                },
                                "ageGroup": {
                                  "type": "object",
                                  "properties": {
                                    "create": { "type": "boolean" },
                                    "read": { "type": "boolean" },
                                    "update": { "type": "boolean" },
                                    "delete": { "type": "boolean" }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot change own role or invalid role value"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Only supervisors can update roles or Cannot change supervisor role"
          },
          "404": {
            "description": "Admin not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/admin/all": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all admins (Supervisor only)",
        "description": "Retrieve a list of all admins with their roles. Only available to supervisors.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of admins retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admins": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "roleId": {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "permissions": {
                                    "type": "object"
                                  }
                                }
                              },
                              "tokenVersion": {
                                "type": "number"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Only supervisors can view all admins"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/admin/{id}/status": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Update admin status (Supervisor only)",
        "description": "Update an admin's status (active/inactive). Only available to supervisors.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Admin ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["active", "inactive"],
                    "description": "New status for the admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "enum": ["active", "inactive"]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Only supervisors can update admin status"
          },
          "404": {
            "description": "Admin not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/questions/restore/{id}": {
      "patch": {
        "tags": ["Questions"],
        "summary": "Restore a deleted question",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Question ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "question_text": {
                          "type": "string"
                        },
                        "option1": {
                          "type": "string"
                        },
                        "option2": {
                          "type": "string"
                        },
                        "option3": {
                          "type": "string"
                        },
                        "correctOption": {
                          "type": "string"
                        },
                        "timeLimitSec": {
                          "type": "number"
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "example": false
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Question not found or is not deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "type": "null"
                    },
                    "error": {
                      "type": "string",
                      "example": "Question not found or is not deleted"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": false
                      },
                      "data": {
                        "type": "null"
                      },
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/restore/{id}": {
      "patch": {
        "tags": ["Categories"],
        "summary": "Restore a deleted category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Category restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Category"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Category with this name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found or is not deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/ageGroups/restore/{id}": {
      "patch": {
        "tags": ["Age Groups"],
        "summary": "Restore a deleted age group",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the age group to restore",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Age group restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "minAge": {
                          "type": "number"
                        },
                        "maxAge": {
                          "type": "number"
                        },
                        "is_deleted": {
                          "type": "boolean"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "updated_by": {
                          "type": "string"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "An age group with this name already exists"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - User doesn't have permission"
          },
          "404": {
            "description": "Age group not found or is not deleted"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/deletions": {
      "get": {
        "tags": ["Deletions"],
        "summary": "Get all deleted records",
        "description": "Retrieve all records that have been soft deleted across different entities",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of deleted records retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "entity_id": {
                            "type": "object",
                            "description": "The deleted entity's details"
                          },
                          "deleted_by": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              }
                            }
                          },
                          "deletedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/reset-password": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Reset admin password (Supervisor only)",
        "description": "Reset an admin's password. Only available to supervisors.",
        "security": [{ "bearerAuth": [] }],

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["newPassword"],
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "description": "New password for the admin",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Password reset successfully"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid password - Must be at least 6 characters long"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Only supervisors can reset passwords or Cannot reset another supervisor's password"
          },
          "404": {
            "description": "Admin not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/search/{type}/{id}": {
      "get": {
        "tags": ["Search"],
        "summary": "Search by ID and type",
        "description": "Search for a record by its ID and type. Available types are: 'category', 'age_group', 'question'",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["category", "age_group", "question"],
              "description": "Type of record to search for"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the record to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Record found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "oneOf": [
                        { "$ref": "#/components/schemas/Category" },
                        { "$ref": "#/components/schemas/AgeGroup" },
                        { "$ref": "#/components/schemas/Question" }
                      ]
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid type specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contact": {
      "post": {
        "tags": ["Contact Us"],
        "summary": "Create a new contact message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "age", "message"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the person"
                  },
                  "age": {
                    "type": "number",
                    "description": "Age of the person"
                  },
                  "message": {
                    "type": "string",
                    "description": "Contact message"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact message created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "age": {
                          "type": "number"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": ["Contact Us"],
        "summary": "Get all contact messages",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of contact messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "age": {
                            "type": "number"
                          },
                          "message": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/contact/{id}": {
      "get": {
        "tags": ["Contact Us"],
        "summary": "Get contact message by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Contact message ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact message found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "age": {
                          "type": "number"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact message not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Contact Us"],
        "summary": "Update contact message",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Contact message ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the person"
                  },
                  "age": {
                    "type": "number",
                    "description": "Age of the person"
                  },
                  "message": {
                    "type": "string",
                    "description": "Contact message"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact message updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "age": {
                          "type": "number"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact message not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Contact Us"],
        "summary": "Delete contact message",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Contact message ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "contactMessage deleted successfully"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact message not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/version": {
      "post": {
        "tags": ["Version"],
        "summary": "Add new version",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["version"],
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "Version number",
                    "example": "1.0.0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Version created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Version"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/version/all": {
      "get": {
        "tags": ["Version"],
        "summary": "Get all versions",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of all versions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Version"
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/version/latest": {
      "get": {
        "tags": ["Version"],
        "summary": "Get latest version for mobile",
        "responses": {
          "200": {
            "description": "Latest version",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Version"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No version found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/suggestions/{id}/copy": {
      "put": {
        "tags": ["Suggestions"],
        "summary": "Mark suggestion as copied",
        "description": "Update the copy status of a suggestion to true",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Suggestion ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Suggestion marked as copied successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Suggestion"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Suggestion not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contact/{id}/read": {
      "put": {
        "tags": ["Contact Us"],
        "summary": "Mark contact message as read",
        "description": "Update the isRead status of a contact message to true",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Contact message ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact message marked as read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "age": {
                          "type": "number"
                        },
                        "message": {
                          "type": "string"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": true
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Contact message not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/forget-password": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Reset admin password using email",
        "description": "Reset an admin's password by sending a new random password to their email",

        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Admin's email address"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully and email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Password reset successfully"
                        }
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Admin not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/questions/Platform": {
      "get": {
        "tags": ["Questions"],
        "summary": "Get all questions for mobile platform",
        "description": "Get all active questions that are enabled for the platform",
        "responses": {
          "200": {
            "description": "List of questions for platform",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QuestionMobile"
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/App": {
      "get": {
        "tags": ["Questions"],
        "summary": "Get all questions for mobile app",
        "description": "Get all active questions that are enabled for the app",
        "responses": {
          "200": {
            "description": "List of questions for app",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QuestionMobile"
                      }
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your Bearer token in the format 'Bearer {token}'"
      }
    },
    "schemas": {
      "Role": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/Role"
          },
          "error": {
            "type": "null"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "data": {
            "type": "null"
          },
          "error": {
            "type": "string",
            "example": "Error message here"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Operation completed successfully"
              }
            }
          },
          "error": {
            "type": "null"
          }
        }
      },
      "AdminSignup": {
        "type": "object",
        "required": ["username", "email", "password", "roleId"],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30,
            "description": "Admin username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Admin email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Admin password"
          },
          "roleId": {
            "type": "string",
            "description": "Role ID"
          }
        }
      },
      "AdminLogin": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "format": "username",
            "description": "Admin username "
          },
          "password": {
            "type": "string",
            "description": "Admin password"
          }
        }
      },
      "AdminResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "roleId": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  },
                  "tokenVersion": {
                    "type": "number",
                    "default": 0
                  }
                }
              },
              "accessToken": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_deleted": {
            "type": "boolean"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/Category"
          },
          "error": {
            "type": "null"
          }
        }
      },
      "AgeGroup": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Age group ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the age group"
          },
          "minAge": {
            "type": "number",
            "description": "Minimum age for the group"
          },
          "maxAge": {
            "type": "number",
            "description": "Maximum age for the group"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Soft delete status"
          },
          "deleted_by": {
            "type": "string",
            "description": "ID of admin who deleted the record"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of deletion"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Question ID"
          },
          "question_text": {
            "type": "string",
            "description": "The question text"
          },
          "option1": {
            "type": "string",
            "description": "First option"
          },
          "option2": {
            "type": "string",
            "description": "Second option"
          },
          "option3": {
            "type": "string",
            "description": "Third option"
          },
          "correctOption": {
            "type": "string",
            "description": "The correct option"
          },
          "timeLimitSec": {
            "type": "number",
            "description": "Time limit in seconds"
          },
          "status": {
            "type": "boolean",
            "description": "Question status"
          },
          "categoryId": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ageGroupId": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Soft delete status"
          },
          "deleted_by": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            }
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "QuestionMobile": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Question ID"
          },
          "question_text": {
            "type": "string",
            "description": "The question text"
          },
          "option1": {
            "type": "string",
            "description": "First option"
          },
          "option2": {
            "type": "string",
            "description": "Second option"
          },
          "option3": {
            "type": "string",
            "description": "Third option"
          },
          "correctOption": {
            "type": "string",
            "description": "The correct option"
          },
          "timeLimitSec": {
            "type": "number",
            "description": "Time limit in seconds"
          },
          "status": {
            "type": "boolean",
            "description": "Question status"
          },
          "categoryId": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ageGroupId": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "CategoryMobile": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Category ID"
          },
          "name": {
            "type": "string",
            "description": "Category name"
          },
          "description": {
            "type": "string",
            "description": "Category description"
          }
        }
      },
      "AgeGroupMobile": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Age group ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the age group"
          },
          "minAge": {
            "type": "number",
            "description": "Minimum age for the group"
          },
          "maxAge": {
            "type": "number",
            "description": "Maximum age for the group"
          }
        }
      },
      "RoleInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Role name"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "category": {
                "type": "object",
                "properties": {
                  "create": {
                    "type": "boolean",
                    "default": false
                  },
                  "read": {
                    "type": "boolean",
                    "default": false
                  },
                  "update": {
                    "type": "boolean",
                    "default": false
                  },
                  "delete": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "ageGroup": {
                "type": "object",
                "properties": {
                  "create": {
                    "type": "boolean",
                    "default": false
                  },
                  "read": {
                    "type": "boolean",
                    "default": false
                  },
                  "update": {
                    "type": "boolean",
                    "default": false
                  },
                  "delete": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "question": {
                "type": "object",
                "properties": {
                  "create": {
                    "type": "boolean",
                    "default": false
                  },
                  "read": {
                    "type": "boolean",
                    "default": false
                  },
                  "update": {
                    "type": "boolean",
                    "default": false
                  },
                  "delete": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        }
      },
      "OperationLog": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Operation log ID"
          },
          "adminId": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "description": "Admin who performed the operation"
          },
          "operation": {
            "type": "string",
            "description": "Type of operation performed (Create, Update, Delete)",
            "example": "Create"
          },
          "model": {
            "type": "string",
            "description": "The model/collection on which operation was performed",
            "example": "category"
          },
          "documentId": {
            "type": "string",
            "description": "ID of the affected document"
          },
          "description": {
            "type": "string",
            "description": "Description of the operation"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the log was created"
          }
        }
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Suggestion ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the person making the suggestion"
          },
          "age": {
            "type": "number",
            "description": "Age of the person making the suggestion"
          },
          "question": {
            "type": "string",
            "description": "The suggested question"
          },
          "copy": {
            "type": "boolean",
            "description": "Whether the suggestion has been copied",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "SuggestionInput": {
        "type": "object",
        "required": ["name", "age", "question"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the person making the suggestion"
          },
          "age": {
            "type": "number",
            "description": "Age of the person making the suggestion"
          },
          "question": {
            "type": "string",
            "description": "The suggested question"
          }
        }
      },
      "Version": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Version ID"
          },
          "version": {
            "type": "string",
            "description": "Version number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact message ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the person"
          },
          "age": {
            "type": "number",
            "description": "Age of the person"
          },
          "message": {
            "type": "string",
            "description": "Contact message"
          },
          "isRead": {
            "type": "boolean",
            "description": "Whether the message has been read",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      }
    }
  }
}
